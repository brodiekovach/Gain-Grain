b0079903 (V1w35h 2024-10-13 16:34:34 -0400  1) "use client";
b0079903 (V1w35h 2024-10-13 16:34:34 -0400  2) 
b0079903 (V1w35h 2024-10-13 16:34:34 -0400  3) import React, { useState, useEffect } from 'react';
b0079903 (V1w35h 2024-10-13 16:34:34 -0400  4) import { useSearchParams } from 'next/navigation';
b0079903 (V1w35h 2024-10-13 16:34:34 -0400  5) import Navbar from "@/components/Navbar";
b0079903 (V1w35h 2024-10-13 16:34:34 -0400  6) 
b0079903 (V1w35h 2024-10-13 16:34:34 -0400  7) export default function EditProfile() {
b0079903 (V1w35h 2024-10-13 16:34:34 -0400  8)   const [user, setUser] = useState('');
b0079903 (V1w35h 2024-10-13 16:34:34 -0400  9)   const [bio, setBio] = useState('');
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 10)   const [profilePic, setProfilePic] = useState('');
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 11)   const [error, setError] = useState(null);
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 12)   
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 13)   const searchParams = useSearchParams();
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 14)   const userId = searchParams.get('userId');
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 15) 
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 16)   useEffect(() => {
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 17)     const fetchUserData = async () => {
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 18)       try {
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 19)         const response = await fetch('/api/profile/get-user-by-id', {
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 20)           method: 'POST',
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 21)           headers: { 'Content-Type': 'application/json' },
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 22)           body: JSON.stringify({ userId }),
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 23)         });
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 24) 
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 25)         if (!response.ok) throw new Error('Failed to fetch user data');
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 26)         const data = await response.json();
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 27) 
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 28)         if (data.success) {
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 29)           setUser(data.user);
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 30)           setBio(data.user.bio || '');
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 31)           setProfilePic(data.user.profilePic || '');
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 32)         } else {
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 33)           setError(data.message || 'Failed to fetch user data');
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 34)         }
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 35)       } catch (err) {
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 36)         setError(err.message);
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 37)       }
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 38)     };
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 39) 
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 40)     if (userId) fetchUserData();
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 41)   }, [userId]);
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 42) 
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 43)   const handleSave = async () => {
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 44)     try {
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 45)       const response = await fetch('/api/profile/update-user', {
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 46)         method: 'POST',
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 47)         headers: { 'Content-Type': 'application/json' },
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 48)         body: JSON.stringify({ userId, bio, profilePic: profilePic }),
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 49)       });
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 50) 
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 51)       if (!response.ok) throw new Error('Failed to update profile');
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 52)       alert('Profile updated successfully');
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 53)     } catch (err) {
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 54)       setError(err.message);
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 55)     }
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 56)   };
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 57) 
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 58)   return (
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 59)     <div>
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 60)       <Navbar />
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 61)       <div className="container mx-auto p-4">
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 62)         <h1 className="text-2xl font-bold">Edit Profile</h1>
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 63)         {error && <p className="text-red-500">{error}</p>}
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 64)         {user && (
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 65)           <div className="mt-4">
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 66)             <div className="flex flex-col">
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 67)               <label className="text-lg">Bio</label>
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 68)               <textarea
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 69)                 value={bio}
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 70)                 onChange={(e) => setBio(e.target.value)}
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 71)                 className="border p-2 rounded-md"
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 72)               />
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 73)             </div>
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 74) 
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 75)             <div className="flex flex-col mt-4">
b4c17058 (V1w35h 2024-10-13 16:40:46 -0400 76)               <label className="text-lg">Profile Picture: </label>
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 77)               <input
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 78)                   type="file"
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 79)                   accept="image/*"
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 80)                   onChange={(e) => setProfilePic(e.target.files[0])}
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 81)                 />
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 82)             </div>
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 83) 
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 84)             <button onClick={handleSave} className="mt-4 bg-blue-500 text-white px-4 py-2 rounded-md">
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 85)               Save Changes
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 86)             </button>
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 87)           </div>
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 88)         )}
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 89)       </div>
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 90)     </div>
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 91)   );
b0079903 (V1w35h 2024-10-13 16:34:34 -0400 92) }
e484b3d6 (V1w35h 2024-10-11 10:49:35 -0400   2) 
b0079903 (V1w35h 2024-10-13 16:34:34 -0400   3) import React, { useEffect, useState} from "react"; 
e484b3d6 (V1w35h 2024-10-11 10:49:35 -0400   2) 
b0079903 (V1w35h 2024-10-13 16:34:34 -0400   3) import React, { useEffect, useState} from "react"; 
cbcbb5df (V1w35h 2024-10-12 12:57:29 -0400   6) import Navbar from "@/components/Navbar";
cbcbb5df (V1w35h 2024-10-12 12:57:29 -0400   7) import Link from "next/link";
cbcbb5df (V1w35h 2024-10-12 12:57:29 -0400   8) 
d0b40dac (V1w35h 2024-09-29 18:58:59 -0400   9) 
d0b40dac (V1w35h 2024-09-29 18:58:59 -0400  10) export default function profile() {
cbcbb5df (V1w35h 2024-10-12 12:57:29 -0400  54)     <div className={styles.wrapper}>
cbcbb5df (V1w35h 2024-10-12 12:57:29 -0400  55)       <Navbar />
b0079903 (V1w35h 2024-10-13 16:34:34 -0400  60)               {user.profilePic ? (
b0079903 (V1w35h 2024-10-13 16:34:34 -0400  61)                 <img src={user.profilePicture} alt="Profile" className="rounded-full w-full h-full object-cover"/>
b0079903 (V1w35h 2024-10-13 16:34:34 -0400  62)               ) : (
b0079903 (V1w35h 2024-10-13 16:34:34 -0400  66)                 </svg>
b0079903 (V1w35h 2024-10-13 16:34:34 -0400  67)               )}
cbcbb5df (V1w35h 2024-10-12 12:57:29 -0400  70)               
cbcbb5df (V1w35h 2024-10-12 12:57:29 -0400  71)               <h1 className="text-2xl font-bold">{user.username} </h1>
cbcbb5df (V1w35h 2024-10-12 12:57:29 -0400  76)               <p className="text-white-600">User's Bio:
b0079903 (V1w35h 2024-10-13 16:34:34 -0400  79)               <Link href="/EditProfile">
b0079903 (V1w35h 2024-10-13 16:34:34 -0400  80) 
b0079903 (V1w35h 2024-10-13 16:34:34 -0400  81)               <button>Edit profile</button>
b0079903 (V1w35h 2024-10-13 16:34:34 -0400  82)               </Link>
b0079903 (V1w35h 2024-10-13 16:34:34 -0400  83) 
cbcbb5df (V1w35h 2024-10-12 12:57:29 -0400  85)             </div>
cbcbb5df (V1w35h 2024-10-12 12:57:29 -0400  86) 
{styles.errorMessage}>{error}</p>
cbcbb5df (V1w35h 2024-10-12 12:57:29 -0400  99)           <Link href="/login">
cbcbb5df (V1w35h 2024-10-12 12:57:29 -0400 100)             <button className="w-full bg-orange-500 text-white font-semibold py-2 px-4 rounded-lg hover:bg-orange-600 transition-all">
cbcbb5df (V1w35h 2024-10-12 12:57:29 -0400 101)             Login/Register
cbcbb5df (V1w35h 2024-10-12 12:57:29 -0400 102)             </button>
cbcbb5df (V1w35h 2024-10-12 12:57:29 -0400 103)           </Link>
d0b40dac (V1w35h 2024-09-29 18:58:59 -0400 104)         </div>
b0079903 (V1w35h       2024-10-13 16:34:34 -0400  14)   bio: { type: String, default: "" },
b0079903 (V1w35h       2024-10-13 16:34:34 -0400  15)   profilePic: {type: String, default: ""}
b0079903 (V1w35h       2024-10-13 16:34:34 -0400  59)       profilePic: "",
42254d37 (V1w35h       2024-10-10 14:56:11 -0400 207) }
42254d37 (V1w35h       2024-10-10 14:56:11 -0400 208) 
42254d37 (V1w35h       2024-10-10 14:56:11 -0400 209) export const getUserById = async (userId) => {
42254d37 (V1w35h       2024-10-10 14:56:11 -0400 210)   const client = await clientPromise;
42254d37 (V1w35h       2024-10-10 14:56:11 -0400 211)   const db  = client.db();
42254d37 (V1w35h       2024-10-10 14:56:11 -0400 212) 
42254d37 (V1w35h       2024-10-10 14:56:11 -0400 215) 
42254d37 (V1w35h       2024-10-10 14:56:11 -0400 216)     if(!user)  {
42254d37 (V1w35h       2024-10-10 14:56:11 -0400 218)     }
42254d37 (V1w35h       2024-10-10 14:56:11 -0400 219) 
42254d37 (V1w35h       2024-10-10 14:56:11 -0400 221)   }
42254d37 (V1w35h       2024-10-10 14:56:11 -0400 222)   catch(error) {
42254d37 (V1w35h       2024-10-10 14:56:11 -0400 223)     console.error('Error retrieving user: ', error);
42254d37 (V1w35h       2024-10-10 14:56:11 -0400 224)     return { success: false, message: 'Error retrieving user.' };
42254d37 (V1w35h       2024-10-10 14:56:11 -0400 225)   }